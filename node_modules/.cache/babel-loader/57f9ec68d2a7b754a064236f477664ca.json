{"ast":null,"code":"var _jsxFileName = \"/home/dci/Desktop/DCI/SuperReact/ClassReact/new-lifeCycle/src/App.js\";\nimport React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport wrapper from './components/Wrapper';\nimport Wrapper from './components/Wrapper';\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.searchData = e => {\n      e.preventDefault();\n      fetch(`https://api.edamam.com/search?q=${this.state.searchValue}&app_id=${process.env.REACT_APP_ID}&app_key=${process.env.REACT_APP_API_KEY}`).then(res => res.json()).then(result => {\n        console.log(result);\n\n        if (condition) {}\n\n        this.setState({\n          data: result.hits\n        });\n      }).catch(err => this.setState({\n        errorMge: err.message\n      }));\n    };\n\n    this.state = {\n      data: [],\n      searchValue: \"chicken\",\n      errorMge: \"\"\n    };\n    console.log(\"constructor\");\n  } // react will execute this code just before teh render method\n\n\n  static getDerivedStateFromProps() {\n    console.log(\"getDerivedStateFromProps\");\n    return null;\n  } // when the user start app for the fist time , this data is fetch and display on the screen just once\n\n\n  componentDidMount() {\n    console.log(\"componentDidMount\");\n    fetch(`https://api.edamam.com/search?q=${this.state.searchValue}&app_id=${process.env.REACT_APP_ID}&app_key=${process.env.REACT_APP_API_KEY}`).then(res => res.json()).then(result => {\n      console.log(result);\n      this.setState({\n        data: result.hits\n      });\n    });\n  }\n\n  /* shouldComponentUpdate(nextProps,nextState){\n    console.log(\"shouldComponentUpdate\")\n    if (nextState.data.length!== 0) {\n      if(nextState.data[0].label===this.state.data[0].label){\n        return false\n      } return true\n    } return true\n  } */\n  render() {\n    console.log(\"render\");\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 8\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container bg-dark text-white\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }\n    }, \"Recipe App\"), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.searchData,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 10\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 12\n      }\n    }, \"Search Recipe: \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onChange: e => this.setState({\n        searchValue: e.target.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 34\n      }\n    }), this.state.errorMge, \" \"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"search\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 12\n      }\n    }))), /*#__PURE__*/React.createElement(Wrapper, {\n      data: this.state.data,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }\n    }));\n  }\n\n}","map":{"version":3,"sources":["/home/dci/Desktop/DCI/SuperReact/ClassReact/new-lifeCycle/src/App.js"],"names":["React","Component","wrapper","Wrapper","App","constructor","props","searchData","e","preventDefault","fetch","state","searchValue","process","env","REACT_APP_ID","REACT_APP_API_KEY","then","res","json","result","console","log","condition","setState","data","hits","catch","err","errorMge","message","getDerivedStateFromProps","componentDidMount","render","target","value"],"mappings":"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","sourcesContent":["\nimport React, { Component } from 'react'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport wrapper from './components/Wrapper';\nimport Wrapper from './components/Wrapper';\n\nexport default class App extends Component {\n\n  constructor(props){\n    super(props)\n    this.state={\n      data:[],\n      searchValue:\"chicken\",\n      errorMge:\"\"\n    }\n    console.log(\"constructor\");\n  }\n\n  // react will execute this code just before teh render method\n  static getDerivedStateFromProps(){\n    console.log(\"getDerivedStateFromProps\");\n    return null\n  \n  }\n// when the user start app for the fist time , this data is fetch and display on the screen just once\n  componentDidMount(){\n    console.log(\"componentDidMount\")\n    fetch(`https://api.edamam.com/search?q=${this.state.searchValue}&app_id=${process.env.REACT_APP_ID}&app_key=${process.env.REACT_APP_API_KEY}`)\n    .then(res=>res.json())\n    .then(result =>{console.log(result)\n    this.setState({data:result.hits})})\n  }\n\n  searchData=(e)=>{\n    e.preventDefault()\n    fetch(`https://api.edamam.com/search?q=${this.state.searchValue}&app_id=${process.env.REACT_APP_ID}&app_key=${process.env.REACT_APP_API_KEY}`)\n    .then(res=>res.json())\n    .then(result =>{console.log(result)\n      if (condition) {\n        \n      }\n    this.setState({data:result.hits})})\n    .catch(err=> this.setState({errorMge:err.message}))\n  }\n\n  /* shouldComponentUpdate(nextProps,nextState){\n    console.log(\"shouldComponentUpdate\")\n    if (nextState.data.length!== 0) {\n      if(nextState.data[0].label===this.state.data[0].label){\n        return false\n      } return true\n    } return true\n  } */\n\n  render() {\n    console.log(\"render\");\n    return (\n       <div>\n        <div className=\"container bg-dark text-white\">\n          <h1>Recipe App</h1>\n         <form onSubmit={this.searchData} >\n           <label>Search Recipe: <input type=\"text\" onChange={(e)=>this.setState({searchValue:e.target.value})} />{this.state.errorMge} </label>\n           <input type=\"submit\" value=\"search\"/>\n         </form>\n        </div>\n          <Wrapper data={this.state.data} />\n      </div>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}